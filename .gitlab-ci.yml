variables:
  UV_VERSION: "0.5"
  PYTHON_VERSION: "3.13"
  BASE_LAYER: bookworm-slim
  # GitLab CI creates a separate mountpoint for the build directory,
  # so we need to copy instead of using hard links.
  UV_LINK_MODE: copy

image: ghcr.io/astral-sh/uv:$UV_VERSION-python$PYTHON_VERSION-$BASE_LAYER

uv-install:
  variables:
    UV_CACHE_DIR: .uv-cache
  cache:
    - key:
        files:
          - uv.lock
      paths:
        - $UV_CACHE_DIR
  script:
    - uv cache prune --ci

stages:
  - test
  - coverage

.pythonVersions:
  parallel:
    matrix:
      - PY_VERSION: [ "3.13", "3.12", "3.11", "3.10" ]
  maxVersion:
    matrix:
      - PY_VERSION: [ "3.13" ]

before_script:
  - UV_PYTHON=${PY_VERSION} uv sync --extra=test
  - source .venv/bin/activate

# Test on all python versions on push to main branch, and on bi-weekly schedule
test:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - delaynet/**/*
        - tests/**/*
        - pyproject.toml
        - requirements.txt
    - if: $CI_PIPELINE_SOURCE == "schedule"
  parallel: !reference [ .pythonVersions,parallel ]
  script:
    - pytest tests/
  artifacts:
    expire_in: 1 month

# coverage report - on any change to code and on main branch for coverage badge
coverage:
  stage: coverage
  coverage: /^TOTAL.+?(\d+\%)$/
  needs: [ ]
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - changes:
        compare_to: 'refs/heads/main'
        paths:
          - delaynet/**/*
          - tests/**/*
          - pyproject.toml
          - requirements.txt
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - pytest --cov --cov-report term
  artifacts:
    expire_in: 1 month
